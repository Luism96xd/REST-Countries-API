{"version":3,"sources":["reportWebVitals.js","components/Buscador.jsx","components/SelectBox.jsx","components/Header.jsx","components/Card.jsx","components/Countries.jsx","Details.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Buscador","props","handleChange","e","preventDefault","emitChangeDebounced","target","value","console","log","termino","busquedaRef","current","datosBusqueda","bind","debounce","emitChange","React","createRef","this","cancel","className","name","type","ref","defaultValue","onChange","placeholder","Component","SelectBox","regions","width","unique","filter","region","index","indexOf","regionRef","useRef","continente","datosFiltro","style","id","map","Header","toggleDarkMode","darkModeOn","onClick","size","Card","flag","population","capital","to","title","src","alt","Countries","countries","isFetch","length","country","borders","flags","svg","common","renderCountries","Details","useParams","history","useHistory","mapProp","property","undefined","asArray","Object","entries","filtered","getCountry","useEffect","document","route","nativeName","keys","official","Number","toLocaleString","subregion","tld","object","monedasArray","currency","output","i","renderCurrencies","currencies","languages","renderLanguages","borderCodes","includes","cca3","key","renderBorders","push","App","state","regiones","paises","busqueda","modo","darkMode","consultarApi","fetch","response","json","data","Array","from","setState","catch","error","filterCountries","filteredCountries","matchName","toLowerCase","startsWith","exact","path","nombreActual","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46dc2438.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nclass Buscador extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.emitChangeDebounced = debounce(this.emitChange, 10);//250\r\n        this.busquedaRef = React.createRef();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.emitChangeDebounced.cancel();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form className=\"search\">\r\n                <ion-icon name=\"search-outline\"></ion-icon>\r\n                <input className=\"search-input\" type=\"text\"\r\n                    ref={this.busquedaRef} \r\n                    defaultValue={this.props.value}\r\n                    onChange={this.handleChange}  \r\n                    placeholder=\"Search for a country...\"/>\r\n            </form>\r\n        )\r\n    }\r\n        \r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.emitChangeDebounced(e.target.value);\r\n        console.log(e.target.value);\r\n\r\n        //Tomamos el valor del input\r\n        var termino = this.busquedaRef.current.value;\r\n        \r\n        //Y lo enviamos al componente principal\r\n        this.props.datosBusqueda(termino);\r\n    }\r\n\r\n    emitChange(value) {\r\n        this.props.datosBusqueda(value);\r\n    }\r\n    \r\n}\r\n\r\nexport default Buscador;","import React, {useRef} from 'react';\r\n\r\nconst SelectBox = (props) => {\r\n\r\n    const {regions, width} = props;\r\n    var unique = regions.filter((region, index) => regions.indexOf(region) === index);\r\n    \r\n    const regionRef = useRef(null);\r\n\r\n    const handleChange = (e) => {\r\n        //Tomamos el valor del input\r\n        var continente = regionRef.current.value;\r\n        console.log(continente);\r\n        //Y lo enviamos al componente principal\r\n        props.datosFiltro(continente);\r\n    }\r\n    const populateSelect = () =>{\r\n        return unique.map((region, index) => {\r\n            let notNull = (region !== \"\" && region !== null);\r\n            return (\r\n                notNull && <option key={`continente_${index}`} className=\"option\" value={region}>{region}</option>\r\n            )\r\n        });\r\n    }\r\n    return (\r\n        <select onChange={handleChange} ref={regionRef} style={{width:  width + \"px\"}} className=\"select-box\" name=\"region\" id=\"region\">\r\n            <option className=\"option\" value=\"\">Filter by Region</option>\r\n            {populateSelect()}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SelectBox;","const Header = (props) =>{\r\n    const {toggleDarkMode, darkModeOn} = props;\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar\">\r\n                <div className=\"logo\"><h2>Where in the world?</h2></div>\r\n                <div className=\"dark-mode-container\">\r\n                    <button onClick={toggleDarkMode} type=\"button\" id=\"dark-mode-btn\"><ion-icon size=\"medium\" name={darkModeOn ? \"moon\" : \"moon-outline\"} id=\"moon-icon\"></ion-icon><p>Dark Mode</p></button>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = (props) => {\r\n    const {index, name, flag, population, region, capital } = props;\r\n\r\n    return (\r\n        <Link className=\"App-link\" to={`/country/${name}`}>\r\n            <div className=\"card\" title={index}>\r\n                <div className=\"image-container\">\r\n                    <img src={flag} alt={name +\" flag\"} className=\"image\"/>\r\n                </div>\r\n                <div className=\"details\">\r\n                    <div className=\"title\">\r\n                        <h2>{name}</h2>\r\n                    </div>\r\n                    <p>{`Population: ${population}`}</p>\r\n                    <p>{`Region: ${region}`}</p>\r\n                    <p>{`Capital: ${capital}`}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Countries = (props) => {\r\n    const {countries, isFetch} = props;\r\n\r\n    const renderCountries = (countries) => {\r\n        return countries.map((country, index) => {\r\n            return (\r\n              isFetch && <Card key={`card_${index}`}\r\n                  index={index}\r\n                  borders={countries[index].borders}\r\n                  flag={countries[index].flags.svg} \r\n                  name={countries[index].name.common} \r\n                  region={countries[index].region} \r\n                  capital={countries[index].capital} \r\n                  population={countries[index].population}\r\n              />\r\n            )\r\n          });\r\n    }\r\n    if (isFetch){\r\n        if(countries.length > 0){\r\n          return (\r\n            <div className=\"container-80\">\r\n              <div className=\"container-grid\">\r\n                {renderCountries(countries)}\r\n              </div>\r\n            </div>\r\n          )\r\n        }else{\r\n          return(\r\n            <div className=\"container-80\">\r\n              <h2>No se encontraron coincidencias</h2>\r\n            </div>\r\n          )\r\n        }\r\n    }else{\r\n        return(        \r\n          <div className=\"container-80\">\r\n            <h2>Cargando Países...</h2>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default Countries;","import React, { useEffect } from 'react';\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Details = (props) => {\r\n    const {countries, isFetch} = props;\r\n    \r\n    const { name } = useParams();\r\n\r\n    const history = useHistory();\r\n\r\n    const getCountry = (countries) =>{\r\n        const asArray = Object.entries(countries);\r\n        //Filter our countries Object list\r\n        const filtered = asArray.filter(([key, value]) => {\r\n            return value.name.common === name;\r\n        });\r\n        //Convert the [key, value] pairs into an array of values\r\n        let country = filtered.map(([_, value]) => value);\r\n\r\n        return country[0];\r\n    }\r\n    const mapProp = (property) => {\r\n        if (property !== null || property !== undefined){\r\n            if (typeof(property) === \"object\"){\r\n                const asArray = Object.entries(property);\r\n                console.log(asArray);\r\n                const filtered = asArray.map(([key, value]) => {\r\n                    return value;\r\n                });\r\n                console.log(filtered);\r\n                return filtered;\r\n            }else{\r\n                console.log(typeof(property));\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n    const renderBorders = (object) => {\r\n        const borderCodes = mapProp(object);\r\n        //console.log(borderCodes);\r\n\r\n        const countriesArray = Object.entries(countries);\r\n        //console.log(\"Countries Array:\");\r\n        //console.log(countriesArray);\r\n\r\n        var filtered = countriesArray.filter(([key, country]) => borderCodes.includes(country?.cca3));\r\n        //console.log(\"Filtered: \"+filtered);\r\n\r\n        const names = filtered.map(([key, value]) => value?.name?.common);\r\n        //console.log(\"Names: \"+names);\r\n        \r\n        const borders = names.map((name, key) => {\r\n            return (\r\n                <Link className=\"App-link\" to={`/country/${name}`}>\r\n                    <button key={`${name}_border_${key}`} className=\"light-button\">{name}</button>\r\n                </Link>\r\n            )\r\n        });\r\n        return borders;\r\n    }\r\n    const renderLanguages = (object) => {\r\n        const languages = mapProp(object);\r\n        console.log(languages);\r\n\r\n        var output = \"\";\r\n        for (let i = 0; i < languages.length; i++) {\r\n            output+=languages[i];\r\n            if (i < languages.length - 1){\r\n                output+=\", \";\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    const renderCurrencies = (object) =>{\r\n        const currencies = mapProp(object);\r\n        const monedasArray = currencies.map((currency) => currency.name);\r\n        var output = \"\";\r\n        for (let i = 0; i < monedasArray.length; i++) {\r\n            output+=monedasArray[i];\r\n            if (i < monedasArray.length - 1){\r\n                output+=\", \";\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    const country = getCountry(countries);\r\n\r\n    useEffect(() => {\r\n        document.title = `${name}`;\r\n    });\r\n\r\n    const redirect = (route) => {\r\n        document.title = \"Countries App\";\r\n        history.push(route);\r\n    }\r\n\r\n    if (isFetch && country !== null && country !== undefined){\r\n        return (\r\n            <div>\r\n                <div className=\"container-80\">\r\n                    <Link className=\"App-link\" to=\"/\">\r\n                        <button className=\"light-button back-button\">\r\n                            <ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n                            <p>Back</p>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"container-80\">\r\n                    <div className=\"container-double\">\r\n                        <div className=\"image\">\r\n                            <img src={country.flags.svg} alt={name+\" flag\"}/>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <h1>{name}</h1>\r\n                            <div className=\"info\">\r\n                                <p><b>Native Name: </b>{country.name.nativeName[Object.keys(country.name.nativeName)[0]].official}</p>\r\n                                <p><b>Population: </b>{Number(country.population).toLocaleString('en-US')}</p>\r\n                                <p><b>Region: </b>{country.region}</p>\r\n                                <p><b>Sub Region: </b>{country.subregion}</p>\r\n                                <p><b>Capital: </b>{country.capital}</p>\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <p><b>Top Level Domain: </b>{country.tld}</p>\r\n                                <p><b>Currencies: </b>{renderCurrencies(country.currencies)}</p>\r\n                                <p><b>Languages: </b>{renderLanguages(country.languages)}</p>\r\n                            </div>\r\n                            <div className=\"borders\">\r\n                                <p><b>Border Countries: </b></p>\r\n                                    {renderBorders(country.borders)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else{\r\n        redirect(\"/\");\r\n        return (\r\n        <div className=\"container-80\">\r\n            <h1>Cargando datos del país...</h1>\r\n        </div>\r\n        )\r\n    }\r\n};\r\nexport default Details;","import React from 'react';\nimport './App.css';\nimport Buscador from './components/Buscador';\nimport SelectBox from './components/SelectBox';\nimport Header from './components/Header';\nimport Countries from './components/Countries';\nimport Details from './Details';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    regiones: [\"Africa\",\"Americas\",\"Antartic\",\"Asia\",\"Europe\",\"Oceania\"],\n    paises: [],\n    filtered: [],\n    busqueda: \"\",\n    region: \"\",\n    modo: \"light\",\n    darkMode: false,\n    isFetch: false,\n  }\n  consultarApi = () =>{\n    const url = \"https://restcountries.com/v3.1/all/\";\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      var countries = Array.from(data);\n      //Actualizar el estado con los países\n      this.setState({\n        paises: countries,\n        filtered: countries,\n        isFetch: true\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n  //El código se ejecuta una única vez.\n  componentDidMount(){\n    this.consultarApi();\n    console.log(\"Component did Mount\");\n    console.log(\"Se hizo una llamada a la API\");\n  }\n\n  datosBusqueda = (termino) => {\n    this.setState({busqueda: termino}, () => {\n      //this.getCountryName(this.state.nombres);\n      this.filterCountries(this.state.paises);\n    })\n  }\n\n  datosFiltro = (continente) => {\n    this.setState({region: continente}, \n      () => this.filterCountries(this.state.paises));\n  }\n\n  filterCountries = (countries) =>{\n    //Convert Objects into a [key, value] array pairs;\n    const asArray = Object.entries(countries);\n    //Filter our countries Object list\n    const filtered = asArray.filter(([key, value]) => {\n    //Check if official name or common name start with our search\n    let matchName = (\n      value.name.common.toLowerCase().startsWith(this.state.busqueda) //||\n      //value.name.official.toLowerCase().startsWith(this.state.busqueda)\n    );\n    let condition = (matchName && (value.region === this.state.region)) ||\n                    (matchName && this.state.region === \"\");\n    return condition;\n    });\n    //Convert the [key, value] pairs into an array of values\n    var filteredCountries = filtered.map(([_, value]) => value);\n\n    //Update State\n    this.setState({\n      filtered: filteredCountries\n    });\n    //Return filtered countries\n    return filteredCountries;\n  }\n\n  toggleDarkMode = () =>{\n    this.setState({\n      modo: this.state.modo === \"light\"? \"dark\" : \"light\",\n      darkMode: this.state.modo === \"light\"? true : false\n    });\n  } \n\n  render (){\n    return (\n      <div className={`App ${this.state.modo}`}>\n        <Header toggleDarkMode={this.toggleDarkMode} darkModeOn={this.state.darkMode}/>\n        <Router>\n          <Switch> {/* The Switch decides which component to show based on the current URL.*/}\n            <Route exact path='/'>\n              <div className=\"container-80\">\n                <div className=\"search-filters\">\n                    <Buscador datosBusqueda={this.datosBusqueda}/>\n                    <SelectBox datosFiltro={this.datosFiltro} width={200} regions={this.state.regiones}/>\n                </div>\n              </div>\n              <Countries countries={this.state.filtered} \n                      regiones={this.state.regiones} \n                      isFetch={this.state.isFetch}\n                      nombreActual={this.state.nombreActual}/>\n            </Route>\n            <Route exact path='/country/:name'>\n              <Details isFetch={this.state.isFetch} countries={this.state.paises}/>\n            </Route>\n          </Switch>\n        </Router>\n        \n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}